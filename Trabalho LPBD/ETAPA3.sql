/*CRIE UMA PROCEDURE CONSULTA_ALUNO, QUE LISTE, NOME DO ALUNO,DATA DE NASCIMENTO, CPF,
NOME DO RESPONSAVEL, NOME DO CURSO E O TIPO DO CURSO,
PARA OS ALUNOS COM NOME OU CURSO INFORMADOS POR PARAMETRO*/

DELIMITER $
CREATE PROCEDURE CONSULTA_ALUNO (X VARCHAR(45))
BEGIN
	SELECT A.NM_ALUNO AS NOME,
		   A.DT_NASC_ALUNO AS NASCIMENTO,
		   A.CD_CPF_ALUNO AS CPF,
		   R.NM_RESP AS RESPONSAVEL,
		   C.DS_CURSO AS CURSO,C.DS_TIPO_CURSO AS TIPO
	FROM ALUNO A
	INNER JOIN RESPONSAVEL R
	ON A.CD_ALUNO = R.CD_ALUNO
	INNER JOIN CURSO C
	ON C.CD_CURSO = A.CD_CURSO
	WHERE A.NM_ALUNO LIKE CONCAT('%', X , '%') OR C.DS_CURSO LIKE CONCAT('%', X , '%');
END
$
DELIMITER ;

/*CRIE UMA PROCEDURE CAD_NOTA_ALUNO, QUE LISTE, NOME DO ALUNO, NOME DO CURSO E INSIRA AS NOTAS
NA TABELA aluno_has_disciplina COM OS DADOS INFORMADOS POR PARAMETRO.*/

DELIMITER $

CREATE PROCEDURE CAD_NOTA_ALUNO(P_CD_ALUNO int,
						   P_CD_DISCI INT (3),
						   P_QT_NP1 DOUBLE(3,2),
						   P_QT_NP2 DOUBLE(3,2),
						   P_QT_MEDIA DOUBLE(3,2),
						   P_QT_FALTAS INT)
BEGIN
	SELECT A.NM_ALUNO AS NOME,
		   C.DS_CURSO AS CURSO
	FROM ALUNO A
	INNER JOIN CURSO C
	ON A.CD_CURSO = C.CD_CURSO
	WHERE A.CD_ALUNO = P_CD_ALUNO;
	INSERT INTO aluno_has_disciplina VALUES
				(P_CD_ALUNO, P_CD_DISCI, P_QT_NP1, P_QT_NP2, P_QT_MEDIA,P_QT_FALTAS);
END
$

DELIMITER ;

/*CRIE UMA FUNÇÃO TOTAL_ALUNOS QUE RECEBA COMO PARÂMETRO (COD INT) O CODIGO DO CURSO, E RETORNE
O TOTAL DE ALUNOS NO CURSO.*/

DELIMITER $
CREATE FUNCTION TOTAL_ALUNOS (COD INT)
RETURNS INT
READS SQL DATA
DETERMINISTIC
BEGIN
	DECLARE TOTAL INT DEFAULT 0;
	SELECT COUNT(CD_ALUNO) INTO TOTAL
		FROM ALUNO
		WHERE CD_CURSO = COD;
	RETURN TOTAL;
END;
$
DELIMITER ;

/* CRIE UMA TRIGGER TOTAL_ALUNOS QUE, APÓS A INCLUSÃO DE UM ALUNO,
ATUALIZE A TABELA QT_VAGAS SOMANDO UM NA QUANTIDADE*/

CREATE TABLE QT_VAGAS(
	QTD INT(2)
);

DELIMITER $

CREATE TRIGGER INCLUI_ALUNO
AFTER INSERT ON ALUNO
FOR EACH ROW
BEGIN
	UPDATE QT_VAGAS
		SET QTD = QTD + 1;
END;
$
DELIMITER ;

/*CRIE UMA TRIGGER DEL_ALUNO QUE, ANTES DA EXCLUSÃO DE UM ALUNO,
EXCLUA SEU RESPONSAVEL, SUAS NOTAS E FALTAS*/

DELIMITER $
CREATE TRIGGER DEL_ALUNO
BEFORE DELETE ON ALUNO
FOR EACH ROW
BEGIN
	DELETE FROM aluno_has_disciplina WHERE CD_ALUNO = OLD.CD_ALUNO;
	DELETE FROM RESPONSAVEL WHERE CD_ALUNO = OLD.CD_ALUNO;
END;
$
DELIMITER ;